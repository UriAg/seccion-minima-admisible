{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uriel\\\\OneDrive\\\\Escritorio\\\\Proyecto Secci\\xF3n\\\\Seccion Minima Con React\\\\seccion-minima-admisible\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Input from './componentes/Input';\nimport Output from './componentes/Output';\nimport Selector from './componentes/Selector';\nimport Button from './componentes/Button';\nimport { useRef, useState } from 'react';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Se crean las referencias y variables para tension\n  const triphasic = useRef();\n  const monophasic = useRef();\n  //-----\n  let BtnTension;\n\n  //Acciones para tensiones\n  const changeStyleMono = e => {\n    BtnTension === 'monophasic' ? BtnTension = undefined : BtnTension = 'monophasic';\n    e.target.classList.toggle('btn--active');\n    triphasic.current.classList.remove('btn--active');\n  };\n  const changeStyleTri = e => {\n    BtnTension === 'triphasic' ? BtnTension = undefined : BtnTension = 'triphasic';\n    e.target.classList.toggle('btn--active');\n    monophasic.current.classList.remove('btn--active');\n  };\n\n  //Se crean referencias y variables para cableados\n  const buried = useRef();\n  const exterior = useRef();\n  const air = useRef();\n  //-----\n  let BtnConduit;\n\n  //Acciones para cableados\n\n  const changeStyleBur = e => {\n    BtnConduit === 'buried' ? BtnConduit = undefined : BtnConduit = 'buried';\n    e.target.classList.toggle('btn--active');\n    exterior.current.classList.remove('btn--active');\n    air.current.classList.remove('btn--active');\n  };\n  const changeStyleExt = e => {\n    BtnConduit === 'exterior' ? BtnConduit = undefined : BtnConduit = 'exterior';\n    e.target.classList.toggle('btn--active');\n    buried.current.classList.remove('btn--active');\n    air.current.classList.remove('btn--active');\n  };\n  const changeStyleAir = e => {\n    BtnConduit === 'air' ? BtnConduit = undefined : BtnConduit = 'air';\n    e.target.classList.toggle('btn--active');\n    exterior.current.classList.remove('btn--active');\n    buried.current.classList.remove('btn--active');\n  };\n\n  //Se crean referencias y variables para salidas\n  const DPMOutput = useRef();\n  const PCMOutput = useRef();\n  const CSMOutput = useRef();\n  const TFMOutout = useRef();\n  const ZRMOutout = useRef();\n  const SCCMOutout = useRef();\n  const MSMOutout = useRef();\n\n  //Se crean referencias y variables para entradas\n  const ratedPowerInput = useRef();\n  const fcValueInput = useRef();\n  const fsValueInput = useRef();\n  const performanceInput = useRef();\n  const fiCosInput = useRef();\n  const segmentLengthInput = useRef();\n  const maxTensionFallInput = useRef();\n  const ztValueInput = useRef();\n  const kValueInput = useRef();\n  //-----\n  let RP;\n  let FC;\n  let FS;\n  let Per;\n  let FiC;\n  let SL;\n  let MTF;\n  let ZtV;\n  let KV;\n\n  //Acciones para entradas\n  const applyValueRP = e => {\n    RP = parseFloat(e.target.value);\n  };\n  const applyValueFC = e => {\n    FC = parseFloat(e.target.value);\n  };\n  const applyValueFS = e => {\n    FS = parseFloat(e.target.value);\n  };\n  const applyValuePer = e => {\n    Per = parseFloat(e.target.value);\n  };\n  const applyValueFiC = e => {\n    FiC = parseFloat(e.target.value);\n  };\n  const applyValueSL = e => {\n    SL = parseFloat(e.target.value);\n  };\n  const applyValueMTF = e => {\n    MTF = parseFloat(e.target.value);\n  };\n  const applyValueZtV = e => {\n    ZtV = parseFloat(e.target.value);\n  };\n  const applyValueKV = e => {\n    KV = parseFloat(e.target.value);\n  };\n\n  //Se crean referencias botones\n  const btnCalc = useRef();\n\n  //Acciones para botones\n  const submit = e => {\n    if (BtnTension === 'monophasic') {\n      monophasicTension();\n    } else if (BtnTension === 'triphasic') {\n      triphasicTension();\n    } else {\n      error();\n    }\n  };\n\n  //Variables para los calculos\n  let DemandedPowerOk;\n  let ProyectedCurrentOk;\n  let LengthKm;\n  let SenFi;\n  let TensionFall;\n  let TensionFall2;\n  let TensionFall3;\n  let ZR;\n  let ShortCircuitCurrent;\n  let MinimumSection;\n  //Variables para resultados\n  let DemandedPowerMessage;\n  let ProyectedCurrentMessage;\n  let ChosenSection;\n  let TensionFallMessage;\n  let ZRValueMessage;\n  let SCCValueMessage;\n  let MinimumSectionMessage;\n  //------Variables para cableado\n  let SEleg;\n  let REleg;\n  let XEleg;\n  let MaxCurrentBuried = [15, 21, 28, 36, 50, 66, 88, 109, 131, 167, 202, 234];\n  let MaxCurrentExterior = [13, 18, 25, 32, 44, 59, 77, 96, 117, 149, 180, 208];\n  let MaxCurrentAir = [15, 21, 28, 36, 50, 68, 89, 111, 134, 171, 207, 239];\n  let seccion1 = `S=1.5 mm2, R=15.9 Ohm/km, X=0.108 Ohm/km `;\n  let seccion2 = `S=2.5 mm2, R=9.55 Ohm/km, X=0.0995 Ohm/km `;\n  let seccion3 = `S=4 mm2, R=5.92 Ohm/km, X=0.0991 Ohm/km `;\n  let seccion4 = `S=6 mm2, R=3.95 Ohm/km, X=0.0901 Ohm/km `;\n  let seccion5 = `S=10 mm2, R=2.29 Ohm/km, X=0.086 Ohm/km `;\n  let seccion6 = `S=16 mm2, R=1.45 Ohm/km, X=0.0813 Ohm/km `;\n  let seccion7 = `S=25 mm2, R=0.933 Ohm/km, X=0.078 Ohm/km `;\n  let seccion8 = `S=35 mm2, R=0.663 Ohm/km, X=0.076 Ohm/km `;\n  let seccion9 = `S=50 mm2, R=0.462 Ohm/km, X=0.0757 Ohm/km `;\n  let seccion10 = `S=70 mm2, R=0.326 Ohm/km, X=0.0736 Ohm/km `;\n  let seccion11 = `S=95 mm2, R=0.248 Ohm/km, X=0.0733 Ohm/km `;\n  let seccion12 = `S=120 mm2, R=0.194 Ohm/km, X=0.0729 Ohm/km `;\n  let seccionNO = `Demasiada corriente, no hay datos en tabla `;\n  let seccionesEC = [seccion1, seccion2, seccion3, seccion4, seccion5, seccion6, seccion7, seccion8, seccion9, seccion10, seccion11, seccion12, seccionNO];\n  let R1 = 15.9;\n  let R2 = 9.55;\n  let R3 = 5.92;\n  let R4 = 3.95;\n  let R5 = 2.29;\n  let R6 = 1.45;\n  let R7 = 0.933;\n  let R8 = 0.663;\n  let R9 = 0.462;\n  let R10 = 0.326;\n  let R11 = 0.248;\n  let R12 = 0.194;\n  let RNO = `Demasiada corriente, no hay datos en tabla `;\n  let REC = [R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12];\n  let X1 = 0.108;\n  let X2 = 0.0995;\n  let X3 = 0.0991;\n  let X4 = 0.0901;\n  let X5 = 0.086;\n  let X6 = 0.0813;\n  let X7 = 0.078;\n  let X8 = 0.076;\n  let X9 = 0.0757;\n  let X10 = 0.0736;\n  let X11 = 0.0733;\n  let X12 = 0.0729;\n  let XNO = `Demasiada corriente, no hay datos en tabla `;\n  let XEC = [X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12];\n\n  //Calculo para tensi칩n monof치sica\n  const monophasicTension = () => {\n    //Potencia demandada\n    DemandedPowerOk = RP * FC * FS;\n    DemandedPowerMessage = \"Potencia demandada: \" + DemandedPowerOk;\n    //Corriente de proyecto\n    ProyectedCurrentOk = DemandedPowerOk / (220 * Per * FiC);\n    ProyectedCurrentMessage = \"Corriente de proyecto: \" + ProyectedCurrentOk;\n\n    //Se establecen los datos de Reactancia, Resistencia y Secci칩n\n    if (BtnConduit === 'buried') {\n      //Enterrado\n      if (ProyectedCurrentOk <= MaxCurrentBuried[0]) {\n        SEleg = 0;\n        REleg = 0;\n        XEleg = 0;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[1]) {\n        SEleg = 1;\n        REleg = 1;\n        XEleg = 1;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[2]) {\n        SEleg = 2;\n        REleg = 2;\n        XEleg = 2;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[3]) {\n        SEleg = 3;\n        REleg = 3;\n        XEleg = 3;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[4]) {\n        SEleg = 4;\n        REleg = 4;\n        XEleg = 4;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[5]) {\n        SEleg = 5;\n        REleg = 5;\n        XEleg = 5;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[6]) {\n        SEleg = 6;\n        REleg = 6;\n        XEleg = 6;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[7]) {\n        SEleg = 7;\n        REleg = 7;\n        XEleg = 7;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[8]) {\n        SEleg = 8;\n        REleg = 8;\n        XEleg = 8;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[9]) {\n        SEleg = 9;\n        REleg = 9;\n        XEleg = 9;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[10]) {\n        SEleg = 10;\n        REleg = 10;\n        XEleg = 10;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[11]) {\n        SEleg = 11;\n        REleg = 11;\n        XEleg = 11;\n      } else {\n        SEleg = 12;\n        REleg = 12;\n        XEleg = 12;\n      }\n    } else if (BtnConduit === 'exterior') {\n      //ca침eria externa\n      if (ProyectedCurrentOk <= MaxCurrentExterior[0]) {\n        SEleg = 0;\n        REleg = 0;\n        XEleg = 0;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[1]) {\n        SEleg = 1;\n        REleg = 1;\n        XEleg = 1;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[2]) {\n        SEleg = 2;\n        REleg = 2;\n        XEleg = 2;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[3]) {\n        SEleg = 3;\n        REleg = 3;\n        XEleg = 3;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[4]) {\n        SEleg = 4;\n        REleg = 4;\n        XEleg = 4;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[5]) {\n        SEleg = 5;\n        REleg = 5;\n        XEleg = 5;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[6]) {\n        SEleg = 6;\n        REleg = 6;\n        XEleg = 6;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[7]) {\n        SEleg = 7;\n        REleg = 7;\n        XEleg = 7;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[8]) {\n        SEleg = 8;\n        REleg = 8;\n        XEleg = 8;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[9]) {\n        SEleg = 9;\n        REleg = 9;\n        XEleg = 9;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[10]) {\n        SEleg = 10;\n        REleg = 10;\n        XEleg = 10;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[11]) {\n        SEleg = 11;\n        REleg = 11;\n        XEleg = 11;\n      } else {\n        SEleg = 12;\n        REleg = 12;\n        XEleg = 12;\n      }\n    } else if (BtnConduit === 'air') {\n      //Aire\n      if (ProyectedCurrentOk <= MaxCurrentAir[0]) {\n        SEleg = 0;\n        REleg = 0;\n        XEleg = 0;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[1]) {\n        SEleg = 1;\n        REleg = 1;\n        XEleg = 1;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[2]) {\n        SEleg = 2;\n        REleg = 2;\n        XEleg = 2;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[3]) {\n        SEleg = 3;\n        REleg = 3;\n        XEleg = 3;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[4]) {\n        SEleg = 4;\n        REleg = 4;\n        XEleg = 4;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[5]) {\n        SEleg = 5;\n        REleg = 5;\n        XEleg = 5;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[6]) {\n        SEleg = 6;\n        REleg = 6;\n        XEleg = 6;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[7]) {\n        SEleg = 7;\n        REleg = 7;\n        XEleg = 7;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[8]) {\n        SEleg = 8;\n        REleg = 8;\n        XEleg = 8;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[9]) {\n        SEleg = 9;\n        REleg = 9;\n        XEleg = 9;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[10]) {\n        SEleg = 10;\n        REleg = 10;\n        XEleg = 10;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[11]) {\n        SEleg = 11;\n        REleg = 11;\n        XEleg = 11;\n      } else {\n        SEleg = 12;\n        REleg = 12;\n        XEleg = 12;\n      }\n    }\n\n    //Porcentaje ca칤da de tensi칩n, Seno de F칤 y longitud en Km\n    LengthKm = SL / 1000;\n    SenFi = Math.cos(Math.asin(FiC));\n    TensionFall = LengthKm * ProyectedCurrentOk * (REC[REleg] * FiC + XEC[XEleg] * SenFi) * (100 / 220);\n\n    //Se determina la secci칩n, determinaci칩n  de variables\n    if (TensionFall <= MTF) {\n      ChosenSection = seccionesEC[SEleg];\n      TensionFallMessage = \"Bajo porcentaje de ca칤da: \" + TensionFall + \"% menor que \" + MTF + \"%\";\n    } else {\n      TensionFall2 = LengthKm * ProyectedCurrentOk * (REC[REleg + 1] * FiC + XEC[XEleg + 1] * SenFi) * (100 / 220);\n      if (TensionFall2 <= MTF) {\n        TensionFallMessage = \"Con un porcentaje de caida del: \" + TensionFall2 + \"% menor que \" + MTF + \"%\";\n      } else {\n        TensionFall3 = LengthKm * ProyectedCurrentOk * (REC[REleg + 2] * FiC + XEC[XEleg + 2] * SenFi) * (100 / 220);\n        TensionFallMessage = \"Con un porcentaje de caida del: \" + TensionFall3 + \"% menor que \" + MTF + \"%\";\n      }\n    }\n\n    //Impedancia de red, declaraci칩n de variables\n    ZR = Math.sqrt(Math.pow(REC[REleg], 2) + Math.pow(XEC[XEleg], 2)) * LengthKm;\n    ZRValueMessage = \"Impedancia de red: \" + ZR + \" Ohms \";\n\n    //Corriente de cortocircuito, declaraci칩n de variables\n    ShortCircuitCurrent = 220 / (ZR + ZtV);\n    SCCValueMessage = \"Corriente de cortocircuito: \" + ShortCircuitCurrent + \" A \";\n\n    //Secci칩n m칤nima, declaraci칩n de variables\n    MinimumSection = ShortCircuitCurrent * Math.sqrt(0.02) / KV;\n    MinimumSectionMessage = \"Secci칩n m칤nima del cable pero no recomendable: \" + MinimumSection + \" mm2 \";\n    console.log(DemandedPowerMessage);\n    console.log(ProyectedCurrentMessage);\n    console.log(ChosenSection);\n    console.log(TensionFallMessage);\n    console.log(ZRValueMessage);\n    console.log(SCCValueMessage);\n    console.log(MinimumSectionMessage);\n  };\n\n  //Calculo para tensi칩n trif치sica\n  const triphasicTension = () => {\n    //Potencia demandada\n    DemandedPowerOk = RP * FC * FS;\n    let DemandedPowerMessage = \"Potencia demandada: \" + DemandedPowerOk;\n    //Corriente de proyecto\n    ProyectedCurrentOk = DemandedPowerOk / (Math.sqrt(3) * 380 * Per * FiC);\n    let ProyectedCurrentMessage = \"Corriente de proyecto: \" + ProyectedCurrentOk;\n\n    //Se establecen los datos de Reactancia, Resistencia y Secci칩n\n    if (BtnConduit === 'buried') {\n      //Enterrado\n      if (ProyectedCurrentOk <= MaxCurrentBuried[0]) {\n        SEleg = 0;\n        REleg = 0;\n        XEleg = 0;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[1]) {\n        SEleg = 1;\n        REleg = 1;\n        XEleg = 1;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[2]) {\n        SEleg = 2;\n        REleg = 2;\n        XEleg = 2;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[3]) {\n        SEleg = 3;\n        REleg = 3;\n        XEleg = 3;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[4]) {\n        SEleg = 4;\n        REleg = 4;\n        XEleg = 4;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[5]) {\n        SEleg = 5;\n        REleg = 5;\n        XEleg = 5;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[6]) {\n        SEleg = 6;\n        REleg = 6;\n        XEleg = 6;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[7]) {\n        SEleg = 7;\n        REleg = 7;\n        XEleg = 7;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[8]) {\n        SEleg = 8;\n        REleg = 8;\n        XEleg = 8;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[9]) {\n        SEleg = 9;\n        REleg = 9;\n        XEleg = 9;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[10]) {\n        SEleg = 10;\n        REleg = 10;\n        XEleg = 10;\n      } else if (ProyectedCurrentOk <= MaxCurrentBuried[11]) {\n        SEleg = 11;\n        REleg = 11;\n        XEleg = 11;\n      } else {\n        SEleg = 12;\n        REleg = 12;\n        XEleg = 12;\n      }\n    } else if (BtnConduit === 'exterior') {\n      //ca침eria externa\n      if (ProyectedCurrentOk <= MaxCurrentExterior[0]) {\n        SEleg = 0;\n        REleg = 0;\n        XEleg = 0;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[1]) {\n        SEleg = 1;\n        REleg = 1;\n        XEleg = 1;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[2]) {\n        SEleg = 2;\n        REleg = 2;\n        XEleg = 2;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[3]) {\n        SEleg = 3;\n        REleg = 3;\n        XEleg = 3;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[4]) {\n        SEleg = 4;\n        REleg = 4;\n        XEleg = 4;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[5]) {\n        SEleg = 5;\n        REleg = 5;\n        XEleg = 5;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[6]) {\n        SEleg = 6;\n        REleg = 6;\n        XEleg = 6;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[7]) {\n        SEleg = 7;\n        REleg = 7;\n        XEleg = 7;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[8]) {\n        SEleg = 8;\n        REleg = 8;\n        XEleg = 8;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[9]) {\n        SEleg = 9;\n        REleg = 9;\n        XEleg = 9;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[10]) {\n        SEleg = 10;\n        REleg = 10;\n        XEleg = 10;\n      } else if (ProyectedCurrentOk <= MaxCurrentExterior[11]) {\n        SEleg = 11;\n        REleg = 11;\n        XEleg = 11;\n      } else {\n        SEleg = 12;\n        REleg = 12;\n        XEleg = 12;\n      }\n    } else if (BtnConduit === 'air') {\n      //Aire\n      if (ProyectedCurrentOk <= MaxCurrentAir[0]) {\n        SEleg = 0;\n        REleg = 0;\n        XEleg = 0;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[1]) {\n        SEleg = 1;\n        REleg = 1;\n        XEleg = 1;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[2]) {\n        SEleg = 2;\n        REleg = 2;\n        XEleg = 2;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[3]) {\n        SEleg = 3;\n        REleg = 3;\n        XEleg = 3;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[4]) {\n        SEleg = 4;\n        REleg = 4;\n        XEleg = 4;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[5]) {\n        SEleg = 5;\n        REleg = 5;\n        XEleg = 5;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[6]) {\n        SEleg = 6;\n        REleg = 6;\n        XEleg = 6;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[7]) {\n        SEleg = 7;\n        REleg = 7;\n        XEleg = 7;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[8]) {\n        SEleg = 8;\n        REleg = 8;\n        XEleg = 8;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[9]) {\n        SEleg = 9;\n        REleg = 9;\n        XEleg = 9;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[10]) {\n        SEleg = 10;\n        REleg = 10;\n        XEleg = 10;\n      } else if (ProyectedCurrentOk <= MaxCurrentAir[11]) {\n        SEleg = 11;\n        REleg = 11;\n        XEleg = 11;\n      } else {\n        SEleg = 12;\n        REleg = 12;\n        XEleg = 12;\n      }\n    }\n\n    //Porcentaje ca칤da de tensi칩n, Seno de F칤 y longitud en Km\n    LengthKm = SL / 1000;\n    SenFi = Math.cos(Math.asin(FiC));\n    TensionFall = Math.sqrt(3) * LengthKm * ProyectedCurrentOk * (REC[REleg] * FiC + XEC[XEleg] * SenFi) * (100 / 380);\n\n    //Se determina la secci칩n, declaraci칩n de variables\n    let ChosenSection;\n    let TensionFallMessage;\n    if (TensionFall <= MTF) {\n      ChosenSection = seccionesEC[SEleg];\n      TensionFallMessage = \"Bajo porcentaje de ca칤da: \" + TensionFall + \"% menor que \" + MTF + \"%\";\n    } else {\n      TensionFall2 = Math.sqrt(3) * LengthKm * ProyectedCurrentOk * (REC[REleg + 1] * FiC + XEC[XEleg + 1] * SenFi) * (100 / 380);\n      if (TensionFall2 <= MTF) {\n        TensionFallMessage = \"Con un porcentaje de caida del: \" + TensionFall2 + \"% menor que \" + MTF + \"%\";\n      } else {\n        TensionFall3 = Math.sqrt(3) * LengthKm * ProyectedCurrentOk * (REC[REleg + 2] * FiC + XEC[XEleg + 2] * SenFi) * (100 / 380);\n        TensionFallMessage = \"Con un porcentaje de caida del: \" + TensionFall3 + \"% menor que \" + MTF + \"%\";\n      }\n    }\n\n    //Impedancia de red\n    ZR = Math.sqrt(Math.pow(REC[REleg], 2) + Math.pow(XEC[XEleg], 2)) * LengthKm;\n    let ZRValueMessage = \"Impedancia de red: \" + ZR + \" Ohms \";\n\n    //Corriente de cortocircuito\n    ShortCircuitCurrent = 220 / (ZR + ZtV);\n    let SCCValueMessage = \"Corriente de cortocircuito: \" + ShortCircuitCurrent + \" A \";\n\n    //Secci칩n M칤nima\n    MinimumSection = ShortCircuitCurrent * Math.sqrt(0.02) / KV;\n    let MinimumSectionMessage = \"Secci칩n m칤nima del cable pero no recomendable: \" + MinimumSection + \" mm2 \";\n    console.log(DemandedPowerMessage);\n    console.log(ProyectedCurrentMessage);\n    console.log(ChosenSection);\n    console.log(TensionFallMessage);\n    console.log(ZRValueMessage);\n    console.log(SCCValueMessage);\n    console.log(MinimumSectionMessage);\n  };\n\n  //Respuesta para ninguna opci칩n\n  const error = () => {\n    alert('ERROR');\n  };\n\n  //Renderizado\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"tension-title\",\n        children: \"Seleccionar tipo de electrificaci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tension-selector-container\",\n        children: [/*#__PURE__*/_jsxDEV(Selector, {\n          ref: monophasic,\n          action: changeStyleMono,\n          id: 'tension monophasic ',\n          children: \"Monof\\xE1sico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Selector, {\n          ref: triphasic,\n          action: changeStyleTri,\n          id: 'tension triphasic',\n          children: \"Trif\\xE1sico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: ratedPowerInput,\n        change: applyValueRP,\n        children: \"Potencia nominal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: fcValueInput,\n        change: applyValueFC,\n        children: \"Valor Fc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: fsValueInput,\n        change: applyValueFS,\n        children: \"Valor Fs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: performanceInput,\n        change: applyValuePer,\n        children: \"Rendimiento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: fiCosInput,\n        change: applyValueFiC,\n        children: \"Coseno de f\\xED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 829,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"conduit-title\",\n        children: \"Seleccionar tipo de Ca\\xF1er\\xEDa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conduit-selector-container\",\n        children: [/*#__PURE__*/_jsxDEV(Selector, {\n          ref: buried,\n          action: changeStyleBur,\n          id: 'conduit buried',\n          children: \"Enterrado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Selector, {\n          ref: exterior,\n          action: changeStyleExt,\n          id: 'conduit exterior',\n          children: \"Exterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Selector, {\n          ref: air,\n          action: changeStyleAir,\n          id: 'conduit air',\n          children: \"Aire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: segmentLengthInput,\n        change: applyValueSL,\n        children: \"Longitud del segmento en metros\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: maxTensionFallInput,\n        change: applyValueMTF,\n        children: \"M\\xE1ximo porcentaje de ca\\xEDda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: ztValueInput,\n        change: applyValueZtV,\n        children: \"Valor Zt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: kValueInput,\n        change: applyValueKV,\n        children: \"Valor K\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          ref: btnCalc,\n          identifier: 'submit',\n          action: submit,\n          children: \"Calcular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          identifier: 'clear',\n          children: \"Limpiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output__container\",\n        children: [/*#__PURE__*/_jsxDEV(Output, {\n          ref: DPMOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          ref: PCMOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          ref: CSMOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          ref: TFMOutout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          ref: ZRMOutout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          ref: SCCMOutout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Output, {\n          ref: MSMOutout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 818,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UxEOUdyOqbGmvuyZD8eRTLIGJJo=\");\n_c = App;\nexport default App;\n\n/*Termina*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Input","Output","Selector","Button","useRef","useState","render","App","triphasic","monophasic","BtnTension","changeStyleMono","e","undefined","target","classList","toggle","current","remove","changeStyleTri","buried","exterior","air","BtnConduit","changeStyleBur","changeStyleExt","changeStyleAir","DPMOutput","PCMOutput","CSMOutput","TFMOutout","ZRMOutout","SCCMOutout","MSMOutout","ratedPowerInput","fcValueInput","fsValueInput","performanceInput","fiCosInput","segmentLengthInput","maxTensionFallInput","ztValueInput","kValueInput","RP","FC","FS","Per","FiC","SL","MTF","ZtV","KV","applyValueRP","parseFloat","value","applyValueFC","applyValueFS","applyValuePer","applyValueFiC","applyValueSL","applyValueMTF","applyValueZtV","applyValueKV","btnCalc","submit","monophasicTension","triphasicTension","error","DemandedPowerOk","ProyectedCurrentOk","LengthKm","SenFi","TensionFall","TensionFall2","TensionFall3","ZR","ShortCircuitCurrent","MinimumSection","DemandedPowerMessage","ProyectedCurrentMessage","ChosenSection","TensionFallMessage","ZRValueMessage","SCCValueMessage","MinimumSectionMessage","SEleg","REleg","XEleg","MaxCurrentBuried","MaxCurrentExterior","MaxCurrentAir","seccion1","seccion2","seccion3","seccion4","seccion5","seccion6","seccion7","seccion8","seccion9","seccion10","seccion11","seccion12","seccionNO","seccionesEC","R1","R2","R3","R4","R5","R6","R7","R8","R9","R10","R11","R12","RNO","REC","X1","X2","X3","X4","X5","X6","X7","X8","X9","X10","X11","X12","XNO","XEC","Math","cos","asin","sqrt","pow","console","log","alert"],"sources":["C:/Users/uriel/OneDrive/Escritorio/Proyecto Secci칩n/Seccion Minima Con React/seccion-minima-admisible/src/App.js"],"sourcesContent":["import './App.css';\nimport Input from './componentes/Input';\nimport Output from './componentes/Output';\nimport Selector from './componentes/Selector';\nimport Button from './componentes/Button';\nimport { useRef, useState } from 'react';\nimport { render } from '@testing-library/react';\n\nfunction App() {\n  //Se crean las referencias y variables para tension\n  const triphasic = useRef();\n  const monophasic = useRef();\n  //-----\n  let BtnTension;\n\n  //Acciones para tensiones\n  const changeStyleMono = (e) =>{\n  BtnTension === 'monophasic' ? BtnTension = undefined : BtnTension = 'monophasic';\n  e.target.classList.toggle('btn--active');\n  triphasic.current.classList.remove('btn--active');\n }\n\n const changeStyleTri = (e) =>{\n  BtnTension === 'triphasic' ? BtnTension = undefined : BtnTension = 'triphasic';\n  e.target.classList.toggle('btn--active');\n  monophasic.current.classList.remove('btn--active');\n }\n\n //Se crean referencias y variables para cableados\n const buried = useRef();\n const exterior = useRef();\n const air = useRef();\n //-----\n let BtnConduit;\n\n //Acciones para cableados\n\n const changeStyleBur = (e) =>{\n  BtnConduit === 'buried' ? BtnConduit = undefined : BtnConduit = 'buried';\n  e.target.classList.toggle('btn--active');\n  exterior.current.classList.remove('btn--active');\n  air.current.classList.remove('btn--active');\n }\n\n const changeStyleExt = (e) =>{\n  BtnConduit === 'exterior' ? BtnConduit = undefined : BtnConduit = 'exterior';\n  e.target.classList.toggle('btn--active');\n  buried.current.classList.remove('btn--active');\n  air.current.classList.remove('btn--active');\n }\n\n const changeStyleAir = (e) =>{\n  BtnConduit === 'air' ? BtnConduit = undefined : BtnConduit = 'air';\n  e.target.classList.toggle('btn--active');\n  exterior.current.classList.remove('btn--active');\n  buried.current.classList.remove('btn--active');\n }\n\n //Se crean referencias y variables para salidas\n const DPMOutput = useRef();\n const PCMOutput = useRef();\n const CSMOutput = useRef();\n const TFMOutout = useRef();\n const ZRMOutout = useRef();\n const SCCMOutout = useRef();\n const MSMOutout = useRef();\n\n //Se crean referencias y variables para entradas\n const ratedPowerInput = useRef();\n const fcValueInput = useRef();\n const fsValueInput = useRef();\n const performanceInput = useRef();\n const fiCosInput = useRef();\n const segmentLengthInput = useRef();\n const maxTensionFallInput = useRef();\n const ztValueInput = useRef();\n const kValueInput = useRef();\n //-----\n let RP;\n let FC;\n let FS;\n let Per;\n let FiC;\n let SL;\n let MTF;\n let ZtV;\n let KV;\n\n //Acciones para entradas\n const applyValueRP = (e) => {\n  RP = parseFloat(e.target.value);\n }\n\n const applyValueFC = (e) => {\n  FC = parseFloat(e.target.value);\n }\n\n const applyValueFS = (e) => {\n  FS = parseFloat(e.target.value);\n }\n\n const applyValuePer = (e) => {\n  Per = parseFloat(e.target.value);\n }\n\n const applyValueFiC = (e) => {\n  FiC = parseFloat(e.target.value);\n }\n\n const applyValueSL = (e) => {\n  SL = parseFloat(e.target.value);\n }\n\n const applyValueMTF = (e) => {\n  MTF = parseFloat(e.target.value);\n }\n\n const applyValueZtV = (e) => {\n  ZtV = parseFloat(e.target.value);\n }\n\n const applyValueKV = (e) => {\n  KV = parseFloat(e.target.value);\n }\n\n //Se crean referencias botones\n const btnCalc = useRef();\n\n //Acciones para botones\n const submit = (e) => {\n  if(BtnTension==='monophasic'){\n    monophasicTension();\n  }\n  else if(BtnTension==='triphasic'){\n    triphasicTension();\n  }\n  else{\n    error();\n  }\n } \n\n //Variables para los calculos\n let DemandedPowerOk;\n let ProyectedCurrentOk;\n let LengthKm;\n let SenFi;\n let TensionFall;\n let TensionFall2;\n let TensionFall3;\n let ZR;\n let ShortCircuitCurrent;\n let MinimumSection;\n //Variables para resultados\n let DemandedPowerMessage;\n let ProyectedCurrentMessage;\n let ChosenSection;\n let TensionFallMessage;\n let ZRValueMessage;\n let SCCValueMessage;\n let MinimumSectionMessage;\n //------Variables para cableado\n let SEleg;\n let REleg;\n let XEleg;\n\n let MaxCurrentBuried=[15, 21, 28, 36, 50, 66, 88, 109, 131, 167, 202, 234];\n let MaxCurrentExterior=[13, 18, 25, 32, 44, 59, 77, 96, 117, 149, 180, 208];\n let MaxCurrentAir=[15, 21, 28, 36, 50, 68, 89, 111, 134, 171, 207, 239];\n\n let seccion1=`S=1.5 mm2, R=15.9 Ohm/km, X=0.108 Ohm/km `;\n let seccion2=`S=2.5 mm2, R=9.55 Ohm/km, X=0.0995 Ohm/km `;\n let seccion3=`S=4 mm2, R=5.92 Ohm/km, X=0.0991 Ohm/km `;\n let seccion4=`S=6 mm2, R=3.95 Ohm/km, X=0.0901 Ohm/km `;\n let seccion5=`S=10 mm2, R=2.29 Ohm/km, X=0.086 Ohm/km `;\n let seccion6=`S=16 mm2, R=1.45 Ohm/km, X=0.0813 Ohm/km `;\n let seccion7=`S=25 mm2, R=0.933 Ohm/km, X=0.078 Ohm/km `;\n let seccion8=`S=35 mm2, R=0.663 Ohm/km, X=0.076 Ohm/km `;\n let seccion9=`S=50 mm2, R=0.462 Ohm/km, X=0.0757 Ohm/km `;\n let seccion10=`S=70 mm2, R=0.326 Ohm/km, X=0.0736 Ohm/km `;\n let seccion11=`S=95 mm2, R=0.248 Ohm/km, X=0.0733 Ohm/km `;\n let seccion12=`S=120 mm2, R=0.194 Ohm/km, X=0.0729 Ohm/km `;\n let seccionNO=`Demasiada corriente, no hay datos en tabla `;\n let seccionesEC=[seccion1, seccion2, seccion3, seccion4, seccion5, seccion6, seccion7, seccion8, seccion9, seccion10, seccion11, seccion12, seccionNO];\n\n let R1=15.9;\n let R2=9.55;\n let R3=5.92;\n let R4=3.95;\n let R5=2.29;\n let R6=1.45;\n let R7=0.933;\n let R8=0.663;\n let R9=0.462;\n let R10=0.326;\n let R11=0.248;\n let R12=0.194;\n let RNO=`Demasiada corriente, no hay datos en tabla `;\n let REC=[R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12];\n\n let X1=0.108;\n let X2=0.0995;\n let X3=0.0991;\n let X4=0.0901;\n let X5=0.086;\n let X6=0.0813;\n let X7=0.078;\n let X8=0.076;\n let X9=0.0757;\n let X10=0.0736;\n let X11=0.0733;\n let X12=0.0729;\n let XNO=`Demasiada corriente, no hay datos en tabla `;\n let XEC=[X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12]\n\n //Calculo para tensi칩n monof치sica\n const monophasicTension = () =>{\n  //Potencia demandada\n  DemandedPowerOk=(RP*FC*FS);\n  DemandedPowerMessage=\"Potencia demandada: \"+DemandedPowerOk;\n  //Corriente de proyecto\n  ProyectedCurrentOk=(DemandedPowerOk/(220*Per*FiC));\n  ProyectedCurrentMessage=\"Corriente de proyecto: \"+ProyectedCurrentOk;\n  \n  //Se establecen los datos de Reactancia, Resistencia y Secci칩n\n  if (BtnConduit==='buried') {//Enterrado\n    if (ProyectedCurrentOk<=MaxCurrentBuried[0]) {\n\n        SEleg=0;\n        REleg=0;\n        XEleg=0;\n\n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[1]) {\n\n        SEleg=1;\n        REleg=1;\n        XEleg=1;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[2]) {\n\n        SEleg=2;\n        REleg=2;\n        XEleg=2;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[3]) {\n\n        SEleg=3;\n        REleg=3;\n        XEleg=3;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[4]) {\n\n        SEleg=4;\n        REleg=4;\n        XEleg=4;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[5]) {\n\n        SEleg=5;\n        REleg=5;\n        XEleg=5;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[6]) {\n\n        SEleg=6;\n        REleg=6;\n        XEleg=6;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[7]) {\n\n        SEleg=7;\n        REleg=7;\n        XEleg=7;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[8]) {\n\n        SEleg=8;\n        REleg=8;\n        XEleg=8;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[9]) {\n\n        SEleg=9;\n        REleg=9;\n        XEleg=9;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[10]) {\n\n        SEleg=10;\n        REleg=10;\n        XEleg=10;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentBuried[11]) {\n\n        SEleg=11;\n        REleg=11;\n        XEleg=11;\n        \n    }else{\n\n        SEleg=12;\n        REleg=12;\n        XEleg=12;\n        \n    }\n} else if (BtnConduit==='exterior') {//ca침eria externa\n    if (ProyectedCurrentOk<=MaxCurrentExterior[0]) {\n            \n        SEleg=0;\n        REleg=0;\n        XEleg=0;\n\n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[1]) {\n\n        SEleg=1;\n        REleg=1;\n        XEleg=1;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[2]) {\n\n        SEleg=2;\n        REleg=2;\n        XEleg=2;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[3]) {\n\n        SEleg=3;\n        REleg=3;\n        XEleg=3;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[4]) {\n\n        SEleg=4;\n        REleg=4;\n        XEleg=4;\n      \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[5]) {\n\n        SEleg=5;\n        REleg=5;\n        XEleg=5;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[6]) {\n\n        SEleg=6;\n        REleg=6;\n        XEleg=6;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[7]) {\n\n        SEleg=7;\n        REleg=7;\n        XEleg=7;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[8]) {\n\n        SEleg=8;\n        REleg=8;\n        XEleg=8;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[9]) {\n\n        SEleg=9;\n        REleg=9;\n        XEleg=9;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[10]) {\n\n        SEleg=10;\n        REleg=10;\n        XEleg=10;\n    \n    }else if (ProyectedCurrentOk<=MaxCurrentExterior[11]) {\n\n        SEleg=11;\n        REleg=11;\n        XEleg=11;\n        \n    }else{\n\n        SEleg=12;\n        REleg=12;\n        XEleg=12;\n\n    }\n}else if(BtnConduit==='air') {//Aire\n    if (ProyectedCurrentOk<=MaxCurrentAir[0]) {\n            \n        SEleg=0;\n        REleg=0;\n        XEleg=0;\n    \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[1]) {\n\n        SEleg=1;\n        REleg=1;\n        XEleg=1;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[2]) {\n\n        SEleg=2;\n        REleg=2;\n        XEleg=2;\n      \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[3]) {\n\n        SEleg=3;\n        REleg=3;\n        XEleg=3;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[4]) {\n\n        SEleg=4;\n        REleg=4;\n        XEleg=4;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[5]) {\n\n        SEleg=5;\n        REleg=5;\n        XEleg=5;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[6]) {\n\n        SEleg=6;\n        REleg=6;\n        XEleg=6;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[7]) {\n\n        SEleg=7;\n        REleg=7;\n        XEleg=7;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[8]) {\n\n        SEleg=8;\n        REleg=8;\n        XEleg=8;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[9]) {\n\n        SEleg=9;\n        REleg=9;\n        XEleg=9;\n\n    }else if (ProyectedCurrentOk<=MaxCurrentAir[10]) {\n\n        SEleg=10;\n        REleg=10;\n        XEleg=10;\n        \n    }else if (ProyectedCurrentOk<=MaxCurrentAir[11]) {\n\n        SEleg=11;\n        REleg=11;\n        XEleg=11;\n        \n    }else{\n\n        SEleg=12;\n        REleg=12;\n        XEleg=12;\n        \n\n    }\n}\n\n//Porcentaje ca칤da de tensi칩n, Seno de F칤 y longitud en Km\nLengthKm=(SL/1000);\nSenFi=(Math.cos(Math.asin(FiC)));\nTensionFall=(LengthKm*ProyectedCurrentOk*((REC[REleg]*FiC)+(XEC[XEleg]*SenFi))*(100/220));\n\n//Se determina la secci칩n, determinaci칩n  de variables\nif (TensionFall<=MTF) {\n  ChosenSection = seccionesEC[SEleg];\n  TensionFallMessage=\"Bajo porcentaje de ca칤da: \"+TensionFall+\"% menor que \"+MTF+\"%\";\n}else{\n  TensionFall2=(LengthKm*ProyectedCurrentOk*((REC[REleg+1]*FiC)+(XEC[XEleg+1]*SenFi))*(100/220));\n  if (TensionFall2<=MTF) {\n    TensionFallMessage=\"Con un porcentaje de caida del: \"+TensionFall2+\"% menor que \"+MTF+\"%\";\n  }\n  else{\n    TensionFall3=(LengthKm*ProyectedCurrentOk*((REC[REleg+2]*FiC)+(XEC[XEleg+2]*SenFi))*(100/220));\n    TensionFallMessage=\"Con un porcentaje de caida del: \"+TensionFall3+\"% menor que \"+MTF+\"%\";\n  }\n}\n\n//Impedancia de red, declaraci칩n de variables\nZR=((Math.sqrt(Math.pow(REC[REleg], 2)+Math.pow(XEC[XEleg], 2)))*LengthKm);\nZRValueMessage=\"Impedancia de red: \"+ZR+\" Ohms \";\n\n//Corriente de cortocircuito, declaraci칩n de variables\nShortCircuitCurrent=(220/(ZR+ZtV));\nSCCValueMessage=\"Corriente de cortocircuito: \"+ShortCircuitCurrent+\" A \";\n\n//Secci칩n m칤nima, declaraci칩n de variables\nMinimumSection=((ShortCircuitCurrent*Math.sqrt(0.02))/KV);\nMinimumSectionMessage=\"Secci칩n m칤nima del cable pero no recomendable: \"+MinimumSection+\" mm2 \";\n\n  console.log(DemandedPowerMessage);\n  console.log(ProyectedCurrentMessage);\n  console.log(ChosenSection);\n  console.log(TensionFallMessage);\n  console.log(ZRValueMessage);\n  console.log(SCCValueMessage);\n  console.log(MinimumSectionMessage);\n}\n\n\n //Calculo para tensi칩n trif치sica\n const triphasicTension = () =>{\n    //Potencia demandada\n    DemandedPowerOk=(RP*FC*FS);\n    let DemandedPowerMessage=\"Potencia demandada: \"+DemandedPowerOk;\n    //Corriente de proyecto\n    ProyectedCurrentOk=(DemandedPowerOk/(Math.sqrt(3)*380*Per*FiC));\n    let ProyectedCurrentMessage=\"Corriente de proyecto: \"+ProyectedCurrentOk;\n    \n    //Se establecen los datos de Reactancia, Resistencia y Secci칩n\n    if (BtnConduit==='buried') {//Enterrado\n      if (ProyectedCurrentOk<=MaxCurrentBuried[0]) {\n  \n          SEleg=0;\n          REleg=0;\n          XEleg=0;\n  \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[1]) {\n  \n          SEleg=1;\n          REleg=1;\n          XEleg=1;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[2]) {\n  \n          SEleg=2;\n          REleg=2;\n          XEleg=2;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[3]) {\n  \n          SEleg=3;\n          REleg=3;\n          XEleg=3;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[4]) {\n  \n          SEleg=4;\n          REleg=4;\n          XEleg=4;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[5]) {\n  \n          SEleg=5;\n          REleg=5;\n          XEleg=5;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[6]) {\n  \n          SEleg=6;\n          REleg=6;\n          XEleg=6;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[7]) {\n  \n          SEleg=7;\n          REleg=7;\n          XEleg=7;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[8]) {\n  \n          SEleg=8;\n          REleg=8;\n          XEleg=8;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[9]) {\n  \n          SEleg=9;\n          REleg=9;\n          XEleg=9;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[10]) {\n  \n          SEleg=10;\n          REleg=10;\n          XEleg=10;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentBuried[11]) {\n  \n          SEleg=11;\n          REleg=11;\n          XEleg=11;\n          \n      }else{\n  \n          SEleg=12;\n          REleg=12;\n          XEleg=12;\n          \n      }\n  } else if (BtnConduit==='exterior') {//ca침eria externa\n      if (ProyectedCurrentOk<=MaxCurrentExterior[0]) {\n              \n          SEleg=0;\n          REleg=0;\n          XEleg=0;\n  \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[1]) {\n  \n          SEleg=1;\n          REleg=1;\n          XEleg=1;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[2]) {\n  \n          SEleg=2;\n          REleg=2;\n          XEleg=2;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[3]) {\n  \n          SEleg=3;\n          REleg=3;\n          XEleg=3;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[4]) {\n  \n          SEleg=4;\n          REleg=4;\n          XEleg=4;\n        \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[5]) {\n  \n          SEleg=5;\n          REleg=5;\n          XEleg=5;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[6]) {\n  \n          SEleg=6;\n          REleg=6;\n          XEleg=6;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[7]) {\n  \n          SEleg=7;\n          REleg=7;\n          XEleg=7;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[8]) {\n  \n          SEleg=8;\n          REleg=8;\n          XEleg=8;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[9]) {\n  \n          SEleg=9;\n          REleg=9;\n          XEleg=9;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[10]) {\n  \n          SEleg=10;\n          REleg=10;\n          XEleg=10;\n      \n      }else if (ProyectedCurrentOk<=MaxCurrentExterior[11]) {\n  \n          SEleg=11;\n          REleg=11;\n          XEleg=11;\n          \n      }else{\n  \n          SEleg=12;\n          REleg=12;\n          XEleg=12;\n  \n      }\n  }else if(BtnConduit==='air') {//Aire\n      if (ProyectedCurrentOk<=MaxCurrentAir[0]) {\n              \n          SEleg=0;\n          REleg=0;\n          XEleg=0;\n      \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[1]) {\n  \n          SEleg=1;\n          REleg=1;\n          XEleg=1;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[2]) {\n  \n          SEleg=2;\n          REleg=2;\n          XEleg=2;\n        \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[3]) {\n  \n          SEleg=3;\n          REleg=3;\n          XEleg=3;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[4]) {\n  \n          SEleg=4;\n          REleg=4;\n          XEleg=4;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[5]) {\n  \n          SEleg=5;\n          REleg=5;\n          XEleg=5;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[6]) {\n  \n          SEleg=6;\n          REleg=6;\n          XEleg=6;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[7]) {\n  \n          SEleg=7;\n          REleg=7;\n          XEleg=7;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[8]) {\n  \n          SEleg=8;\n          REleg=8;\n          XEleg=8;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[9]) {\n  \n          SEleg=9;\n          REleg=9;\n          XEleg=9;\n  \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[10]) {\n  \n          SEleg=10;\n          REleg=10;\n          XEleg=10;\n          \n      }else if (ProyectedCurrentOk<=MaxCurrentAir[11]) {\n  \n          SEleg=11;\n          REleg=11;\n          XEleg=11;\n          \n      }else{\n  \n          SEleg=12;\n          REleg=12;\n          XEleg=12;\n          \n  \n      }\n  }\n  \n  //Porcentaje ca칤da de tensi칩n, Seno de F칤 y longitud en Km\n  LengthKm=(SL/1000);\n  SenFi=(Math.cos(Math.asin(FiC)));\n  TensionFall=(Math.sqrt(3)*LengthKm*ProyectedCurrentOk*((REC[REleg]*FiC)+(XEC[XEleg]*SenFi))*(100/380));\n\n  //Se determina la secci칩n, declaraci칩n de variables\n  let ChosenSection;\n  let TensionFallMessage;\n\n  if (TensionFall<=MTF) {\n    ChosenSection = seccionesEC[SEleg];\n    TensionFallMessage=\"Bajo porcentaje de ca칤da: \"+TensionFall+\"% menor que \"+MTF+\"%\";\n  }else{\n    TensionFall2=(Math.sqrt(3)*LengthKm*ProyectedCurrentOk*((REC[REleg+1]*FiC)+(XEC[XEleg+1]*SenFi))*(100/380));\n    if (TensionFall2<=MTF) {\n      \n      TensionFallMessage=\"Con un porcentaje de caida del: \"+TensionFall2+\"% menor que \"+MTF+\"%\";\n    }\n    else{\n      TensionFall3=(Math.sqrt(3)*LengthKm*ProyectedCurrentOk*((REC[REleg+2]*FiC)+(XEC[XEleg+2]*SenFi))*(100/380));\n      TensionFallMessage=\"Con un porcentaje de caida del: \"+TensionFall3+\"% menor que \"+MTF+\"%\";\n    }\n  }\n\n  //Impedancia de red\n  ZR=((Math.sqrt(Math.pow(REC[REleg], 2)+Math.pow(XEC[XEleg], 2)))*LengthKm);\n  let ZRValueMessage=\"Impedancia de red: \"+ZR+\" Ohms \";\n\n  //Corriente de cortocircuito\n  ShortCircuitCurrent=(220/(ZR+ZtV));\n  let SCCValueMessage=\"Corriente de cortocircuito: \"+ShortCircuitCurrent+\" A \";\n\n  //Secci칩n M칤nima\n  MinimumSection=((ShortCircuitCurrent*Math.sqrt(0.02))/KV);\n  let MinimumSectionMessage=\"Secci칩n m칤nima del cable pero no recomendable: \"+MinimumSection+\" mm2 \";\n\n  console.log(DemandedPowerMessage);\n  console.log(ProyectedCurrentMessage);\n  console.log(ChosenSection);\n  console.log(TensionFallMessage);\n  console.log(ZRValueMessage);\n  console.log(SCCValueMessage);\n  console.log(MinimumSectionMessage);\n\n}\n\n\n //Respuesta para ninguna opci칩n\n const error = () =>{\n  alert('ERROR');\n }\n\n\n //Renderizado\n  return (\n    <div className=\"App\">\n      <div className='data-input-container'>\n      <h1 className='tension-title'>Seleccionar tipo de electrificaci칩n</h1>\n        <div className='tension-selector-container'>\n          <Selector ref={monophasic} action={changeStyleMono} id={'tension monophasic '}>Monof치sico</Selector>\n          <Selector ref={triphasic} action={changeStyleTri} id={'tension triphasic'}>Trif치sico</Selector>\n        </div>\n        <Input ref={ratedPowerInput} change={applyValueRP}>Potencia nominal</Input>\n        <Input ref={fcValueInput} change={applyValueFC} >Valor Fc</Input>\n        <Input ref={fsValueInput} change={applyValueFS} >Valor Fs</Input>\n        <Input ref={performanceInput} change={applyValuePer} >Rendimiento</Input>\n        <Input ref={fiCosInput} change={applyValueFiC} >Coseno de f칤</Input>\n        <h1 className='conduit-title'>Seleccionar tipo de Ca침er칤a</h1>\n        <div className='conduit-selector-container'>\n          <Selector ref={buried} action={changeStyleBur} id={'conduit buried'}>Enterrado</Selector>\n          <Selector ref={exterior} action={changeStyleExt} id={'conduit exterior'}>Exterior</Selector>\n          <Selector ref={air} action={changeStyleAir} id={'conduit air'}>Aire</Selector>\n        </div>\n        <Input ref={segmentLengthInput} change={applyValueSL} >Longitud del segmento en metros</Input>\n        <Input ref={maxTensionFallInput} change={applyValueMTF} >M치ximo porcentaje de ca칤da</Input>\n        <Input ref={ztValueInput} change={applyValueZtV} >Valor Zt</Input>\n        <Input ref={kValueInput} change={applyValueKV} >Valor K</Input>\n        <div className='button-container'>\n          <Button ref={btnCalc} identifier={'submit'} action={submit}>Calcular</Button>\n          <Button identifier={'clear'}>Limpiar</Button>\n        </div>\n        <div className='output__container'>\n          <Output ref={DPMOutput}></Output>\n          <Output ref={PCMOutput}></Output>\n          <Output ref={CSMOutput}></Output>\n          <Output ref={TFMOutout}></Output>\n          <Output ref={ZRMOutout}></Output>\n          <Output ref={SCCMOutout}></Output>\n          <Output ref={MSMOutout}></Output>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/*Termina*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}